{"version":3,"sources":["container/Header/index.jsx","components/KorCanvas.jsx","components/DetailCard.jsx","components/ContentSection.jsx","components/ContentTabs.jsx","container/KorMap/data.js","container/KorMap/index.jsx","container/KorMap/public/raphael_path_s.korea.js","App.js","serviceWorker.js","index.js"],"names":["WTextField","styled","TextField","Header","setLocation","React","inputVal","setInputVal","Container","id","maxWidth","Grid","container","spacing","alignItems","item","md","xs","action","onSubmit","e","preventDefault","value","onChange","target","placeholder","label","variant","fullWidth","autoFocus","InputProps","endAdornment","InputAdornment","position","IconButton","type","aria-label","KorCanvas","props","locationTable","DetailCard","bbs_ordr","location","content","toggle","setToggle","detail","setDetail","tmp","split","head_name","length","a","axios","get","params","ret","console","log","data","fetchData","onClick","undefined","substr","ContentSection","tab","info","map","val","key","TabWrapper","Tab","TabsWrapper","Tabs","ContentTab","setTab","useState","setValue","event","newValue","textContent","centered","TabIndicatorProps","style","backgroundColor","KorMap","setInfo","mapDoms","setDoms","Raphael","R","attr","fill","stroke","doms","gygg","path","seoul","incheon","gangwon","chungbuk","daejeon","sejong","chungnam","jeonbuk","gwangju","jeonnam","gyeongbuk","daegu","gyeongnam","ulsan","busan","jeju","cursor","onmouseover","document","getElementById","display","onmouseout","onclick","initKorMap","query","color","setAttribute","alignContent","App","className","Boolean","window","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.42bdb750.chunk.js","sourcesContent":["// @flow \r\nimport * as React from 'react';\r\nimport './public/header.css'\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport styled from \"styled-components\";\r\n\r\nconst WTextField = styled(TextField)`\r\n  & label.Mui-focused {\r\n    color:#90cc00;\r\n  }\r\n  & .MuiOutlinedInput-root {\r\n    &.Mui-focused fieldset {\r\n      border-color: #90cc00;\r\n    }\r\n  }\r\n`;\r\nconst Header = ({setLocation}) => {\r\n    const [inputVal,setInputVal] = React.useState('');\r\n    const handleInput = (e)=>{\r\n        setInputVal(e.target.value);\r\n    }\r\n    const handleChange = (e)=>{\r\n        e.preventDefault();\r\n        setLocation(inputVal);\r\n    }\r\n    return (\r\n        <>\r\n            <Container id=\"header\" maxWidth=\"md\">\r\n                <Grid container spacing={3} alignItems='center'>\r\n                    <Grid item md={4} xs={12}>\r\n                        <div id=\"logo\">\r\n                            <div id=\"logo_head\">더 낫재?</div>\r\n                            <div id=\"logo_description\">더 나은 재난문자를 위한 서비스</div>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item md={8} xs={12}>\r\n                        <form action=\"\" onSubmit={handleChange}>\r\n                            <WTextField value={inputVal} onChange={handleInput} \r\n                                        id=\"outlined-basic\" placeholder=\"ex) 양천구청\" label=\"지역명 검색하기\" \r\n                                        variant=\"outlined\" fullWidth autoFocus\r\n                                        InputProps={{\r\n                                            endAdornment: (\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton type=\"submit\" aria-label=\"search\">\r\n                                                    <SearchIcon />\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                            )\r\n                                        }}\r\n                            >\r\n                            </WTextField>\r\n                        </form>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Header;","// @flow \r\nimport * as React from 'react';\r\nimport './public/map.css';\r\nconst KorCanvas = (props) => {\r\n    return (\r\n        <div id=\"map\">\r\n            <div id=\"canvas\">\r\n                <h1 id=\"map_logo\">한달간 재난문자 현황</h1>\r\n                <div id=\"south\">\r\n                </div>\r\n                <div id=\"seoul\">\r\n                    <h2>서울특별시</h2>\r\n                </div>\r\n                <div id=\"gygg\">\r\n                    <h2>경기도</h2>\r\n                </div>\r\n                <div id=\"incheon\">\r\n                    <h2>인천광역시</h2>\r\n                </div>\r\n                <div id=\"gangwon\">\r\n                    <h2>강원도</h2>\r\n                </div>\r\n                <div id=\"chungbuk\">\r\n                    <h2>충청북도</h2>\r\n                </div>\r\n                <div id=\"chungnam\">\r\n                    <h2>충청남도</h2>\r\n                </div>\r\n                <div id=\"daejeon\">\r\n                    <h2>대전광역시</h2>\r\n                </div>\r\n                <div id=\"sejong\">\r\n                    <h2>세종특별자치시</h2>\r\n                </div>\r\n                <div id=\"gwangju\">\r\n                    <h2>광주광역시</h2>\r\n                </div>\r\n                <div id=\"jeonbuk\">\r\n                    <h2>전라북도</h2>\r\n                </div>\r\n                <div id=\"jeonnam\">\r\n                    <h2>전라남도</h2>\r\n                </div>\r\n                <div id=\"gyeongbuk\">\r\n                    <h2>경상북도</h2>\r\n                </div>\r\n                <div id=\"gyeongnam\">\r\n                    <h2>경상남도</h2>\r\n                </div>\r\n                <div id=\"daegu\">\r\n                    <h2>대구광역시</h2>\r\n                </div>\r\n                <div id=\"busan\">\r\n                    <h2>부산광역시</h2>\r\n                </div>\r\n                <div id=\"ulsan\">\r\n                    <h2>울산광역시</h2>\r\n                </div>\r\n                <div id=\"jeju\">\r\n                    <h2>제주특별자치도</h2>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default KorCanvas;","// @flow \r\nimport * as React from 'react';\r\nimport axios from 'axios';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport './public/card.css';\r\nconst locationTable = {\r\n    'seoul': '서울',\r\n    'gygg': '경기',\r\n    'incheon': '인천',\r\n    'gangwon': '강원',\r\n    'chungnam': '충청',\r\n    'chungbuk': '충청',\r\n    'daejeon': '대전',\r\n    'jeonbuk': '전라',\r\n    'jeonnam': '전라',\r\n    'gwangju': '광주',\r\n    'jeju': '제주',\r\n    'gyeongbuk': '경상',\r\n    'gyeongnam': '경상',\r\n    'daegu': '대구',\r\n    'ulsan': '울산',\r\n    'busan': '부산',\r\n};\r\nconst DetailCard = ({ bbs_ordr, location, content }) => {\r\n    const [toggle, setToggle] = React.useState(false);\r\n    const [detail, setDetail] = React.useState(null);\r\n    let tmp = content.split('[');\r\n    const head_name = tmp[tmp.length - 1].split(']')[0];\r\n    const clickHeader = () => {\r\n        setToggle(!toggle);\r\n    }\r\n    React.useEffect(() => {\r\n        if (toggle) {\r\n            async function fetchData() {\r\n                const ret = await axios.get('http://localhost:8000/location/detail', {\r\n                    params: {\r\n                        bbs_ordr: bbs_ordr\r\n                    }\r\n                });\r\n                console.log(ret.data);\r\n                setDetail(ret.data);\r\n            }\r\n            fetchData();\r\n        }\r\n    }, [toggle === true]);\r\n    return (\r\n        <div id=\"card\">\r\n            <div id=\"card-header\" onClick={clickHeader}>\r\n                <span id=\"tag\">{locationTable[location]===undefined ? location.substr(0,2) : locationTable[location]}</span>\r\n                <span id=\"header-name\">{head_name}</span>\r\n                <MoreHorizIcon id=\"more\"/>\r\n            </div>\r\n            <div id=\"card-content\">\r\n                <div id=\"date\">{content}</div>\r\n                {(toggle === true && detail !== null) ? <div id=\"card-detail\">{detail}</div> : null}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DetailCard;","// @flow \r\nimport * as React from 'react';\r\nimport DetailCard from './DetailCard';\r\nimport './public/contentSection.css';\r\nconst ContentSection = ({ tab, info, location }) => {\r\n    return (\r\n        <div id=\"content_section\">\r\n            {tab === '위험 현황' ? (\r\n                info.length > 0 ?\r\n                    info.map((val) => {\r\n                        return <DetailCard key={val.bbs_ordr} bbs_ordr={val.bbs_ordr} location={location} content={val.content} />\r\n                    })\r\n                    :\r\n                    info === -1 ? <div id=\"no-search\">검색결과가 없습니다 ㅠㅠ</div> : null\r\n                ) : null\r\n            }\r\n            {tab === '재난 그래프' ? (\r\n                <div>재난 그래프</div>\r\n                ) : null\r\n            }\r\n            {tab === '키워드 분석' ? (\r\n                <div>키워드 분석</div>\r\n                ) : null\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ContentSection;","import React from 'react';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport styled from 'styled-components';\r\n\r\nconst TabWrapper = styled(Tab)`\r\n    font-family: 'GmarketSansMedium', sans-serif;\r\n    font-size: 1.1rem;\r\n`;\r\nconst TabsWrapper = styled(Tabs)`\r\n    margin-bottom:20px;\r\n`;\r\nexport default function ContentTab({ setTab }) {\r\n    const [value, setValue] = React.useState(0);\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n        setTab(event.target.textContent);\r\n    };\r\n\r\n    return (\r\n        <TabsWrapper\r\n            value={value}\r\n            onChange={handleChange}\r\n            // indicatorColor=\"primary\"\r\n            // textColor=\"primary\"\r\n            centered\r\n            TabIndicatorProps={{\r\n                style: {\r\n                    backgroundColor: \"#90cc00\"\r\n                }\r\n            }}\r\n        >\r\n            <TabWrapper label=\"위험 현황\" />\r\n            <TabWrapper label=\"재난 그래프\" />\r\n            <TabWrapper label=\"키워드 분석\" />\r\n        </TabsWrapper>\r\n    );\r\n}","export const locationTable = {\r\n    'seoul': '서울',\r\n    'gygg': '경기',\r\n    'incheon': '인천',\r\n    'gangwon': '강원',\r\n    'chungnam': '충청남도',\r\n    'chungbuk': '충청북도',\r\n    'daejeon': '대전',\r\n    'jeonbuk': '전라북도',\r\n    'jeonnam': '전라남도',\r\n    'gwangju': '광주',\r\n    'jeju': '제주',\r\n    'gyeongbuk': '경상북도',\r\n    'gyeongnam': '경상남도',\r\n    'daegu': '대구',\r\n    'ulsan': '울산',\r\n    'busan': '부산',\r\n};","import * as React from 'react';\r\n//Components & Containers\r\nimport Header from '../Header';\r\nimport KorCanvas from '../../components/KorCanvas';\r\nimport ContentSection from '../../components/ContentSection';\r\nimport ContentTab from '../../components/ContentTabs';\r\n//public\r\nimport './public/KorMap.css';\r\nimport { locationTable } from './data';\r\n//third-party\r\nimport initKorMap from './public/raphael_path_s.korea';\r\nimport { Raphael } from 'react-raphael';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport axios from 'axios';\r\n\r\n\r\nconst KorMap = (props) => {\r\n    const [location, setLocation] = React.useState('seoul');\r\n    const [tab, setTab] = React.useState('위험 현황');\r\n    const [info, setInfo] = React.useState(\"\");\r\n    const [mapDoms, setDoms] = React.useState(null);\r\n    React.useEffect(() => {\r\n        setDoms(initKorMap(Raphael, setLocation));\r\n        return () => {\r\n            console.log('end');\r\n        };\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        async function fetchData() {\r\n            const ret = await axios.get('http://localhost:8000/location', {\r\n                params: {\r\n                    location: location\r\n                }\r\n            });\r\n            setInfo(ret.data);\r\n            console.log(ret.data)\r\n        }\r\n        fetchData();\r\n    }, [location]);\r\n\r\n    React.useEffect(() => {\r\n        if (mapDoms !== null) {\r\n            for (let query in locationTable) {\r\n                (async () => {\r\n                    const ret = await axios.get('http://localhost:8000/location/cur', {\r\n                        params: {\r\n                            location: query\r\n                        }\r\n                    });\r\n                    let color = '#ffcdd2';\r\n                    if(ret.data > 500) color = '#c62828';\r\n                    else if (ret.data > 400) color = '#e53935';\r\n                    else if(ret.data > 300) color = '#ef5350';\r\n                    else if(ret.data > 200) color = '#ef9a9a';\r\n    \r\n                    (mapDoms[query])[0].setAttribute(\"fill\", color);\r\n                })();\r\n            }\r\n        }\r\n    }, [mapDoms]);\r\n\r\n    return (\r\n        <>\r\n            <Header setLocation={setLocation} />\r\n            <Container id=\"container\" maxWidth=\"md\">\r\n                <Grid container spacing={3} alignItems='center' alignContent='center'>\r\n                    <Grid id=\"content_detail\" item md={7} xs={12}>\r\n                        <ContentTab id=\"content_tab\" setTab={setTab} />\r\n                        <ContentSection tab={tab} info={info} location={location} />\r\n                    </Grid>\r\n                    <Grid id=\"content_map\" item md={5} xs={12}>\r\n                        <KorCanvas />\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default KorMap;","export default function initKorMap (Raphael,setLocation) {\n    // let sca = '01';\n    let sca = '';\n \tlet R = Raphael(\"south\", 320, 400);\n\tlet attr = {\n\t\tfill: \"#ccece6\",\n\t\tstroke: \"#666\",\n\t\t\"stroke-width\": 0.5,\n\t\t\"stroke-linejoin\": \"round\"\n\t};\n\tlet doms = {};\n    // 경기도\n\tdoms.gygg = R.path(\"M69,74 76,76 78,74 78,68 81,67 83,64 94,67 98,62 102,60 111,58 114,68 119,68 122,72 128,74 130,79 140,88 140,90 134,94 137,100 135,107 154,116 148,118 150,124 147,129 146,139 144,145 139,146 134,152 127,153 125,159 120,162 109,158 107,161 94,160 98,157 97,153 92,156 93,146 87,147 85,141 91,143 95,137 91,136 89,133 92,131 97,131 97,123 108,125 112,120 120,113 120,112, 117,110 112,107 112,105 111,104 113,102, 109,98 102,104 89,102 86,96 82,99 71,92 73,87 69,85 71,82 69,79 69,74z\").attr(attr);\n    // 서울\n\tdoms.seoul = R.path(\"M112,118 118,112 111,108 110,104 111,102 109,100 102,106 98,109 99,113 104,116 110,118 112,118z\").attr(attr);\n    // 인천\n\tdoms.incheon = R.path(\"M96,109 98,115 102,117 108,119 110,120 107,123.5 98,121, 97,122 95,120 96,119 90,110 89,110 89,104 99,105z M79,105 84,105 85,107 85,111 80,110 79,105z\").attr(attr);\n\t//doms.ganghwa = R.path(\"M79,105 84,105 85,107 85,111 80,110 79,105z\").attr(attr);\n    // 강원도\n\tdoms.gangwon = R.path(\"M98,60 104,58 113,56 116,68 121,68 124,72 130,74 132,79 142,88 142,90 136,94 139,100 137,107 156,116 150,118 152,124 149,129 148,139 146,145 152,150 152,150 153.5,145 157,137 160,135 161,138 169,141 181,140 175,146 189,147 192,149 199,148 205,153 207,148 211,153 224,150 231,154 239,143 234,139 234,132 225,118 222,108 199,81 180,33 175,34 151,6 147,7 142,4 145,18 137,16 134,22 130,23 131,30 125,29 124,20 121,18 123,8 120,5 115,11 117,17 108,20 106,18 105,24 99,25 93,30 86,31 90,40 87,45 89,47 91,53 98,60 z\").attr(attr);\n\tdoms.chungbuk = R.path(\"M145,148 152,152 154,152 155,148 157,140 159,138 161,140 169,143 176,142 171.5,148 189,149 192,151 199,150 186,160 184,169 175,167 162,171 163,175 156,175 156,185 151,182 149,185 154,191 155,200 150,207 158,208 164,215 159,217 155,226, 146,227 140,224 135,218 136,213 133,209 133,208 132,203 140,199 124,193 127,186 131,182 127,178 128,173 121,163 128,160 128,155 133,155 135,155 140,147z\").attr(attr);\n\tdoms.daejeon = R.path(\"M131,209 131,208 130,203 135,199 122,195 116,204 116,214 118,215 121,211 124,214 z\").attr(attr);\n\tdoms.sejong = R.path(\"M125,186 129,182 125,178 126,173 121,166 118,170 117,181 123,190 z\").attr(attr);\n\tdoms.chungnam = R.path(\"M119,166 116,170 115,181 121,190 119,196 114,204 113,214 118,218 121,214 125,216 132,211 135,218 139,225 134,225 131,231 120,219 115,222 112,220 107,223 102,216 93,216 91,222 80,227 73,221 76,217 73,207 75,206 71,202 75,198 71,190 72,183 68,175 65,182 57,173 65,164 71,168 77,167 74,160 75,153 81,163 88,162 90,174 100,166 101,162.5 106,164 110,161 117,163.5 120,164 z\").attr(attr);\n\tdoms.jeonbuk = R.path(\"M142,227 136,227 131,233 120,221 115,224 112,222 107,225 102,218 93,218 91,224 80,229 77,238 85,238 83,242 84,248 77,249 65,259 78,264 70,268 71,274 75,276 81,273 86,264 95,268 101,267 102,271 101,277 104,279 116,277 122,280 128,275 137,279 139,273 139,265 135,258 138,252 148,237 154,235 155,228 150,230 z\").attr(attr);\n\tdoms.gwangju = R.path(\"M77,292 78,284 84,283 90,285 94,281 101,288 98,298 92,298 89,300 85,298 85,294 80,291 78,293 77,292z\").attr(attr);\n\tdoms.jeonnam = R.path(\"M68,270 70,276 75,278 81,275 86,266 95,270 101,269 102,273 101,279 104,281 116,279 122,282 128,277 137,281 135,290 144,301 144,310 140,309 138,315 132,313 135,321 141,319 140,328 134,326 133,333 131,333 130,319 120,325 121,329 125,337 115,345 106,339 111,337 111,332 115,334 116,327 105,330 98,333 93,334 94,346 87,347 81,336 78,343 70,355 63,354 63,343 66,341 63,336 71,335 64,326 74,321 69,313 61,319 62,306 58,305 61,300 55,288 63,277 63,273 68,270z M77,292 78,293 80,291 85,294 85,298 89,300 92,298 98,298 101,288 94,281 90,285 84,283 78,284 77,292z\").attr(attr);\n\tdoms.gyeongbuk = R.path(\"M198,153 188,160 186,171 177,169 165,172 166,177 158,177 158,187 152,185 151,185 156,191 157,200 153,205 161,207 166,216 161,218 157,226 156,236 160,241 168,241 173,253 180,256 178,252 183,250 182,246 189,241 184,238 186,232 193,232 200,230 203,233 207,241 200,249 194,248 191,254 193,259 201,260 207,264 215,258 220,259 229,249 238,255 240,251 246,255 250,240 252,232 248,235 241,235 244,227 242,213 246,176 245,157 241,144 233,154 230,156 224,152 211,155 208,151 206,155.5 200,151 198,153z M273,145 276,142 278,141 283,140 280,148 276,147 275,145 273,145z M306,150 310,150 309,152z M311,152 315,150 314,152z\").attr(attr);\n\t// doms.ulleung = R.path(\"M273,145 276,144 283,140 280,148 276,147 275,145 273,145 z\").attr(attr);\n\t// doms.dokdo = R.path(\"M312,150 316,150 315,152z M317,152 321,150 320,152z\").attr(attr);\n\tdoms.daegu = R.path(\"M184,258 180,253 185,251 184,247 191.5,241 185.5,237 187.5,234 193,234 200,232 201.5,235 205.5,241 199.5,247 193,247 189.5,253 191,259 186,256 184,258 z\").attr(attr);\n\tdoms.gyeongnam = R.path(\"M147,301 138,288 141,275 142,264 138,258 142,251 146,244 152,238 155,238 159,243 166,244 172,256 180,258 184,261 186,259 192,262 198,262 208,267 213,262 219,260 216,264 221,268 229,272 229,276 220,284 213,287 205,300 194,296 194,302 184,301 181,307 186,308 181,315 181,318 175,315 168,317 162,313 161,304 157,304 154,309 151,308 146,312 z\").attr(attr);\n\tdoms.ulsan = R.path(\"M224,258 229.5,251 238,257 241,253 245,257 245,272 241,271 238,278 231,274 232,271 224,267 219,264 222,260 z\").attr(attr);\n\tdoms.busan = R.path(\"M232,277 224,284 215,289 213,293 209,298 212,299 217,299 220,303 225,302 231,296 232,290 239,282 235,279 z\").attr(attr);\n\tdoms.jeju = R.path(\"M96,377 105,367 120,368 126,365 134,365 142,370 136,380 127,384 114,386 104,384 100,385 94,377 z\").attr(attr);\n\n    let current = null;\n\n    for (let location in doms) {\n        // doms[location].color = Raphael.getColor();\n\t\t// (function (st, location) {\n\t\t\tdoms[location][0].style.cursor = \"pointer\";\n            doms[location][0].onmouseover = function () { // onover\n\t\t\t\t// current && doms[current].animate({fill: \"#ccece6\", stroke: \"#666\"}, 500) && (document.getElementById(current).style.display = \"\");\n\t\t\t\t// doms[location].animate({fill: doms[location].color, stroke: \"#ccc\"}, 500);\n\t\t\t\tdocument.getElementById(location).style.display = \"block\";\n\t\t\t\tcurrent = location;\n \t\t\t}\n\t\t\tdoms[location][0].onmouseout = function () {\n                // doms[location].animate({fill: \"#ccece6\", stroke: \"#666\"}, 500);\n                document.getElementById(location).style.display = \"none\";\n\t\t\t};\n\n\t\t\tif ((sca === '01' && location === \"seoul\") || (sca === '09' && location === \"gangwon\")\n\t\t\t|| (sca === '08' && location === \"gygg\") || (sca === '04' && location === \"incheon\")\n\t\t\t|| (sca === '11' && location === \"chungnam\") || (sca === '10' && location === \"chungbuk\")\n\t\t\t|| (sca === '06' && location === \"daejeon\") || (sca === '17' && location === \"sejong\")\n\t\t\t|| (sca === '12' && location === \"jeonbuk\") || (sca === '05' && location === \"gwangju\")\n\t\t\t|| (sca === '13' && location === \"jeonnam\") || (sca === '14' && location === \"gyeongbuk\")\n\t\t\t|| (sca === '03' && location === \"daegu\") || (sca === '15' && location === \"gyeongnam\")\n\t\t\t|| (sca === '07' && location === \"ulsan\") || (sca === '02' && location === \"busan\")\n\t\t\t|| (sca === '16' && location === \"jeju\") )\n\t\t\t{\n\t\t\t\tdoms[location][0].onmouseover();\n\t\t\t}\n\n\n\t\t\tdoms[location][0].onclick = function () {\n                setLocation(location);\n\t\t\t\tswitch(location) {\n\t\t\t\t\tcase \"seoul\":\n\t\t\t\t\t\t// location.href=\"#seoul\";\n\t\t\t\t\t\tcurrent = location;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"gygg\":\n\t\t\t\t\t\t// location.href=\"#gygg\";\n\t\t\t\t\t\tcurrent = location;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"incheon\":\n\t\t\t\t\t\t// location.href=\"#incheon\";\n\t\t\t\t\t\tcurrent = location;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"gangwon\":\n\t\t\t\t\t\t// location.href=\"#gangwon\";\n\t\t\t\t\t\tcurrent = location;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"chungbuk\":\n\t\t\t\t\t\t// location.href=\"#chungbuk\";\n\t\t\t\t\t\tcurrent = location;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"chungnam\":\n\t\t\t\t\t\t// location.href=\"#chungnam\";\n\t\t\t\t\t\tcurrent = location;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"daejeon\":\n\t\t\t\t\t\t// location.href=\"#daejeon\";\n\t\t\t\t\t\tcurrent = location;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"sejong\":\n\t\t\t\t\t\t// location.href=\"#sejong\";\n\t\t\t\t\t\tcurrent = location;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"jeonbuk\":\n\t\t\t\t\t\t// location.href=\"#jeonbuk\";\n\t\t\t\t\t\tcurrent = location;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"gwangju\":\n\t\t\t\t\t\t// location.href=\"#gwangju\";\n\t\t\t\t\t\tcurrent = location;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"jeonnam\":\n\t\t\t\t\t\t// location.href=\"#jeonnam\";\n\t\t\t\t\t\tcurrent = location;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"gyeongbuk\":\n\t\t\t\t\t\t// location.href=\"#gyeongbuk\";\n\t\t\t\t\t\tcurrent = location;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"daegu\":\n\t\t\t\t\t\t// location.href=\"#daegu\";\n\t\t\t\t\t\tcurrent = location;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"gyeongnam\":\n\t\t\t\t\t\t// location.href=\"#gyeongnam\";\n\t\t\t\t\t\tcurrent = location;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"ulsan\":\n\t\t\t\t\t\t// location.href=\"#ulsan\";\n\t\t\t\t\t\tcurrent = location;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"busan\":\n\t\t\t\t\t\t// location.href=\"#busan\";\n\t\t\t\t\t\tcurrent = location;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"jeju\":\n\t\t\t\t\t\t// location.href=\"#jeju\";\n\t\t\t\t\t\tcurrent = location;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// location.href=\"#\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t};\n\n\t\t// })(doms[location], location);\n    }\n    return doms;\n};\n","import React from 'react';\nimport KorMap from './container/KorMap';\nimport './App.css';\nfunction App() {\n    return (\n        <div className=\"App\">\n                <KorMap />\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}